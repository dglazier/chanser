#include "FiducialCut_DC_XY.h"

namespace chanser{

  void FiducialCut_DC_XY::ChangeRun()
  {
    if(GetCLAS12()==nullptr) return;
    _fieldVal =  GetCLAS12()->runconfig()->getTorus();
    bool inbending = (_fieldVal==-1);

    //these should come from database
    //For now copy appropriate values
    _minparams = (inbending ? _minparams_in : _minparams_out);
    _maxparams = (inbending ? _maxparams_in : _maxparams_out);
    std::cout<<"DC_FiducialCut_XY::ChangeRun() "<<_minparams.size()<<" "<<_minparams_in.size()<<" "<<_minparams_out.size()<<std::endl;
  }
  
  FiducialCut_DC_XY::FiducialCut_DC_XY(TString pid,Int_t layer)
  {
    //  _regionVal = layer;
    // _fieldVal = field;
    auto pdg=TDatabasePDG::Instance()->GetParticle(pid)->PdgCode();
    if(pdg == 11) _partPidVal=0;
    else if (pdg==2212) _partPidVal=1;
    else if (pdg==211) _partPidVal= 2;
    else if (pdg==-211) _partPidVal = 3;
    else if (pdg==321) _partPidVal=4;
    else if (pdg==-321) _partPidVal=5;
    else{
      std::cerr<<"FiducialCut_DC_XY, invalid layer PID "<<pid<<" "<<pdg<<std::endl;
      exit(0);
    }
    

    
    if(layer==1){
      _regionVal=6;
      _layer = layer-1;
    }
    else if(layer==2){
      _regionVal=18;
      _layer=layer-1;
    }
    else if(layer==3){
      _regionVal=36;
     _layer=layer-1;
    }
    else{
      std::cerr<<"FiducialCut_DC_XY, invalid layer should be 1,2,3 "<<std::endl;
      exit(0);
    }

    //Save all the required cos and sin values
    std::vector<double> phiRotation={0,-60*TMath::DegToRad(),-120*TMath::DegToRad(),-180*TMath::DegToRad(), 120*TMath::DegToRad(), 60*TMath::DegToRad()};
    for(const auto& phi:phiRotation){
      _cosPhiRot.push_back(std::cos(phi));
      _sinPhiRot.push_back(std::sin(phi));
    }
    
    _maxparams_in = 
      {{{{-14.563, 0.60032},{-19.6768, 0.58729},{-22.2531, 0.544896}},
	{{-12.7486, 0.587631},{-18.8093, 0.571584},{-19.077, 0.519895}},
	{{-11.3481, 0.536385},{-18.8912, 0.58099},{-18.8584, 0.515956}},
	{{-10.7248, 0.52678},{-18.2058, 0.559429},{-22.0058, 0.53808}},
	{{-16.9644, 0.688637},{-17.1012, 0.543961},{-21.3974, 0.495489}},
	{{-13.4454, 0.594051},{-19.4173, 0.58875},{-22.8771, 0.558029}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}}};
    
    _minparams_in = 
      {{{{12.2692, -0.583057},{17.6233, -0.605722},{19.7018, -0.518429}},
	{{12.1191, -0.582662},{16.8692, -0.56719},{20.9153, -0.534871}},
	{{11.4562, -0.53549},{19.3201, -0.590815},{20.1025, -0.511234}},
	{{13.202, -0.563346},{20.3542, -0.575843},{23.6495, -0.54525}},
	{{12.0907, -0.547413},{17.1319, -0.537551},{17.861, -0.493782}},
	{{13.2856, -0.594915},{18.5707, -0.597428},{21.6804, -0.552287}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}},
       {{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},
	{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}},{{0, 0},{0, 0},{0, 0}}}};
    
    _maxparams_out = {
      {{{-9.86221, 0.565985},{-16.4397, 0.569087},{-29.7787, 0.586842}},
       {{-10.2065, 0.565541},{-16.5554, 0.571394},{-28.933, 0.582078}},
       {{-8.48034, 0.550706},{-16.4397, 0.569087},{-27.1037, 0.563767}},
       {{-6.77188, 0.53062},{-16.4397, 0.569087},{-30.485, 0.587534}},
       {{-8.00705, 0.543502},{-16.4038, 0.571178},{-27.7934, 0.573472}},
       {{-10.3328, 0.571942},{-16.69, 0.575252},{-30.8177, 0.592418}}},
      {{{-5.43811, 0.550931},{-17.1906, 0.57936},{-18.552, 0.546789}},
       {{-5.46281, 0.549659},{-18.0351, 0.588876},{-17.6981, 0.549803}},
       {{-3.26087, 0.531677},{-16.3762, 0.578005},{-17.6831, 0.55049}},
       {{-4.5985, 0.542017},{-17.2735, 0.581566},{-16.7013, 0.538853}},
       {{-6.83053, 0.561019},{-16.5082, 0.579816},{-18.0846, 0.553592}},
       {{-5.67358, 0.5558},{-18.8196, 0.594965},{-19.4333, 0.560965}}},
      {{{-12.6317, 0.611023},{-16.5644, 0.578978},{-11.5882, 0.496324}},
       {{-12.8886, 0.614807},{-17.0847, 0.584072},{-14.9561, 0.532125}},
       {{-11.4504, 0.600574},{-16.3862, 0.57885},{-12.3309, 0.515431}},
       {{-12.2256, 0.609801},{-16.2134, 0.574306},{-12.7661, 0.515787}},
       {{-12.6311, 0.611069},{-16.2486, 0.577577},{-12.6783, 0.519597}},
       {{-12.6937, 0.615423},{-16.1427, 0.57847},{-11.5156, 0.509458}}},
      {{{-5.95834, 0.538479},{-15.8909, 0.570164},{-30.2922, 0.586335}},
       {{-6.15277, 0.542134},{-16.1129, 0.573794},{-31.6024, 0.592681}},
       {{-6.12341, 0.542023},{-16.1611, 0.575971},{-29.8604, 0.581528}},
       {{-6.37691, 0.546536},{-16.8501, 0.580239},{-30.0623, 0.580497}},
       {{-5.96605, 0.537402},{-15.7154, 0.5704},{-31.2955, 0.594146}},
       {{-5.86704, 0.539556},{-16.2268, 0.580945},{-31.2345, 0.590849}}},
      {{{-11.7796, 0.614043},{-19.0763, 0.595015},{-18.804, 0.559538}},
       {{-12.4399, 0.623126},{-19.1733, 0.600646},{-17.675, 0.557016}},
       {{-10.4158, 0.605483},{-18.0044, 0.595497},{-17.5441, 0.556504}},
       {{-12.1552, 0.617782},{-19.7134, 0.603519},{-17.3756, 0.549676}},
       {{-11.3901, 0.612121},{-18.2429, 0.596796},{-10.0097, 0.482578}},
       {{-12.5004, 0.626384},{-19.9266, 0.60993},{-16.4668, 0.543148}}},
      {{{-5.60572, 0.537153},{-16.3196, 0.582537},{-32.4336, 0.601487}},
       {{-5.52369, 0.532985},{-15.2055, 0.568935},{-31.9046, 0.600079}},
       {{-5.78558, 0.546316},{-16.3328, 0.583765},{-36.0074, 0.617008}},
       {{-5.82321, 0.542839},{-15.9551, 0.580441},{-31.4304, 0.597132}},
       {{-5.36526, 0.535923},{-15.9219, 0.586886},{-30.4245, 0.599613}},
       {{-5.14766, 0.53037},{-14.1986, 0.561504},{-31.7548, 0.60233}}}};
    
    
    _minparams_out = {
      {{{8.07831, -0.548881},{16.4382, -0.569075},{33.7768, -0.607402}},
       {{8.51057, -0.551773},{16.7782, -0.571381},{32.2613, -0.600686}},
       {{8.5232, -0.552628},{16.4274, -0.56775},{31.1516, -0.584708}},
       {{7.98845, -0.544571},{16.4381, -0.569077},{31.8093, -0.595237}},
       {{7.46705, -0.538557},{16.7414, -0.573345},{31.1888, -0.586751}},
       {{7.82627, -0.538957},{16.2409, -0.565872},{32.1089, -0.596846}}},
      {{{7.1519, -0.563678},{16.1038, -0.571795},{20.0449, -0.559802}},
       {{6.38228, -0.553174},{16.4526, -0.576382},{19.3523, -0.556484}},
       {{7.11359, -0.561586},{17.2815, -0.578095},{14.9667, -0.53314}},
       {{5.89053, -0.556406},{17.4946, -0.585038},{17.3607, -0.545739}},
       {{7.08253, -0.562099},{15.1516, -0.569192},{16.9665, -0.545949}},
       {{5.53089, -0.546315},{16.4962, -0.574014},{17.9593, -0.545788}}},
      {{{12.4879, -0.610527},{16.7782, -0.575065},{11.7704, -0.511182}},
       {{12.1931, -0.604779},{15.6443, -0.560967},{12.7304, -0.515606}},
       {{12.206, -0.602999},{16.5979, -0.573274},{12.3971, -0.513795}},
       {{11.5538, -0.604186},{16.6974, -0.576753},{12.7385, -0.517811}},
       {{12.9718, -0.611968},{17.7233, -0.583943},{10.6601, -0.49233}},
       {{12.2966, -0.607592},{15.923, -0.564133},{13.9314, -0.525363}}},
      {{{5.92493, -0.539308},{17.4444, -0.586183},{31.6974, -0.591988}},
       {{5.467, -0.525876},{16.0649, -0.570869},{30.5937, -0.590071}},
       {{5.67798, -0.531096},{16.5072, -0.57205},{30.7922, -0.586727}},
       {{6.85795, -0.558336},{14.9425, -0.545596},{31.3159, -0.592865}},
       {{6.0155, -0.545283},{16.0649, -0.570869},{30.6644, -0.587002}},
       {{6.18343, -0.539055},{17.4516, -0.583221},{32.6264, -0.594317}}},
      {{{12.9118, -0.618907},{19.7061, -0.60171},{18.9352, -0.559461}},
       {{13.0612, -0.618743},{19.0954, -0.595406},{19.7019, -0.568119}},
       {{12.4007, -0.613459},{17.544, -0.581147},{12.8175, -0.511017}},
       {{13.3144, -0.625596},{18.9225, -0.594001},{15.1524, -0.530046}},
       {{13.101, -0.620887},{18.5616, -0.595279},{14.8807, -0.533111}},
       {{12.2964, -0.613529},{19.0686, -0.595276},{19.2596, -0.562706}}},
      {{{5.34118, -0.530584},{16.3015, -0.585185},{38.7808, -0.641362}},
       {{6.68051, -0.548747},{16.4236, -0.583598},{38.4718, -0.630423}},
       {{6.87, -0.552602},{16.4285, -0.57977},{36.8889, -0.624053}},
       {{7.15338, -0.565067},{16.9387, -0.595922},{37.2398, -0.624177}},
       {{6.06995, -0.550001},{15.7376, -0.577755},{32.6004, -0.601595}},
       {{6.20459, -0.543148},{14.6326, -0.561623},{39.2154, -0.631762}}}};
    
  }
}
